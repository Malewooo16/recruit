generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  role     String
  recruit     Recruit?
  recruiter   Recruiter?
  ActivityLog ActivityLog[]
}

model ActivityLog {
  id          Int      @id @default(autoincrement())
  action      String
  description String
  createdAt   DateTime @default(now())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
}

model Company {
  id         Int          @id @default(autoincrement())
  name       String
  recruiters Recruiter[]
  jobOffers  JobOffer[]
}

model Recruit {
  id        Int    @id @default(autoincrement())
  firstName String
  lastName  String
  userId    Int  @unique
  user      User @relation(fields: [userId], references: [id])
  applications Application[]
  interviews   Interview[]
}

model Recruiter {
  id         Int      @id @default(autoincrement())
  role       String
  userId     Int      @unique
  user       User     @relation(fields: [userId], references: [id])
  companyId  Int
  company    Company  @relation(fields: [companyId], references: [id])
  interviews Interview[]
}

model JobOffer {
  id          Int           @id @default(autoincrement())
  title       String
  description String
  location    String
  salary      Float
  companyId   Int
  company     Company       @relation(fields: [companyId], references: [id])
  applications Application[]
  interviews   Interview[]
}

model Application {
  id         Int       @id @default(autoincrement())
  recruit    Recruit   @relation(fields: [recruitId], references: [id])
  recruitId  Int
  jobOffer   JobOffer? @relation(fields: [jobOfferId], references: [id], onDelete: Cascade)
  jobOfferId Int?
  status     String
}

model Interview {
  id          Int       @id @default(autoincrement())
  date        DateTime
  recruit     Recruit   @relation(fields: [recruitId], references: [id])
  recruitId   Int
  recruiter   Recruiter @relation(fields: [recruiterId], references: [id])
  recruiterId Int
  jobOffer    JobOffer? @relation(fields: [jobOfferId], references: [id])
  jobOfferId  Int?
}

